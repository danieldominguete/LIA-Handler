name: FastAPI CI/CD PRD

on:
  push:
    branches:
      - main
  
jobs:
    CI:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.10'
                architecture: 'x64'

            - name: Install Python Virtual Environment
              run: |
                python -m pip install --upgrade pip
                pip install virtualenv

            - name:  Setup Virtual env
              uses: actions/cache@b4a9f2f6e8b4d225c2e7d1b556b8c54f2e5a1e19
              id: cache-venv
              with:
                path: venv
                key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
                restore-keys: |
                  ${{ runner.os }}-venv-   

            - name: Activate and Install Depencies into Virtual env
              run: python -m venv venv && source venv/bin/activate && 
                pip3 install -r requirements.txt
              if: steps.cache-venv.outputs.cache-hit != 'true'

            - name: Run tests
              env: 
                API_KEY: ${{ secrets.API_KEY }}
                ENV: ${{ secrets.ENV }}
              run: |
                export PYTHONPATH=$PYTHONPATH:$(pwd)
                source venv/bin/activate 
                pytest

            - name: Create Zipfile archive of Dependencies
              run: |
                cd ./venv/lib/python3.10/site-packages
                zip -r9 ../../../../api.zip .

            - name: Add API files to ZIP archive
              run: |
                cd ./src
                zip -g ../api.zip -r .
            
            - name: Upload dependencies
              uses: actions/upload-artifact@v4
              with:
                name: api
                path: api.zip

    CD:
        runs-on: ubuntu-latest
        needs: [CI]
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
        - name: Install AWS CLI
          uses: unfor19/install-aws-cli-action@v1
          with:
            version: 2
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        - name: Download Lambda api.zip artifact
          uses: actions/download-artifact@v4
          with:
            name: api
        - name: Upload to S3
          run: aws s3 cp api.zip s3://lia-handler/api.zip
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        - name: Deploy new Lambda
          run: aws lambda update-function-code --function-name lia-handler --s3-bucket lia-handler --s3-key api.zip
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}